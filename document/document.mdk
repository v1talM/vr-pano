Title         : 7月12日面试记录总结
Author        : vital
Logo          : True

[TITLE]

# 前言 

我个人一直有总结面试的习惯，一方面是可以在这上面找到不足的地方提升自己的经验，另一方面可以通过这些面试总结来记录自己的历程。但这次总结大概拖更了一个月左右，主要是刚来成都这会儿又是忙着找工作，又是忙着找房子的。
好不容易稳定下来了就忘记了这回事，等到今天才想起来于是又去找公司 HR 要了当时的那份面试题，在此重新总结一下这次面试的情况。

# 概述

这次投的岗位依然是「PHP 开发工程师」，公司位于地铁高新站附近的天府新谷。来这里报到之后面试官直接给了一份面试题，题目是以一个项目的形式分成 5 道小题组成，要求完成时间是2小时以内。面试官根据题目描述了大致的要求之后就直接让我上机写代码了。
附上当时的面试题：

![面试题]

[面试题]: images/interview.png "interview" { width:auto; max-width:100% }

虽然之前猜到可能会有面试题，但是没想到是以这种形式而且是上机直接写一个项目。来不及做多余的思考，马上就坐到电脑面前准备开始实现这个项目。但是当我坐下来才发现这台电脑上面竟然没有安装开发环境 QAQ 

因为面试官要求用 Laravel 框架来实现（公司这时候正在往 Laravel 方向发展），于是我又亲自配置了一遍环境。整个过程大概花了 15 分钟时间，用 composer 部署依赖的时候公司的网络还是比较给力的。

# 解题过程

通读整个面试题发现，整个项目其实就是分为 A、B 两个站点。站点 A 作为服务端负责数据的处理并提供「Restful」形式的 API 服务，站点 B 作为客户端主要用来展示用户界面，有点像「前后端分离」的模式。
我的做法就是站点 B 通过发起 AJAX 请求与站点 A 进行数据通信，以下是我的解题方法中总结出来的知识点

# 知识点

整个题目我总结下来比较突出的知识点可能就以下几个，其他的细节就省略了。

* **「Restful」路由及控制器** -- 这个用 Laravel 的都应该比较熟悉了，其实这里就只有 2 个路由（一个登陆一个注册）感觉没有 Restful 的必要了。
* **「表单验证」** -- 这个可以用自己原生的方法来完成，也可以用 Laravel 提供的 「Validation」实现，但是我还是推荐使用「FormRequest」的形式来完成。
* **「跨域」**-- 方法很多，可以采用后端使用 PHP 原生的写法对 header 进行处理。也可以引用第三方扩展包的方式，比如**「barryvdh/laravel-cors」**，当然我就是这么做的 O(∩_∩)O
* **「前端功力」** -- 这个项目其实也考了前端能力，在这么短的时间内要把前后端的功能都实现并且还完成交互。

# 总结

经过一个半小时左右的解题最终还是把所有功能都实现了，然后 HR 就通知面试官上来查看了结果最后就进行了进一步的交谈，最后我还是入职这家公司，这也算是自己正式的一份实习工作吧。

Enjoy!

[reference manual]: http://research.microsoft.com/en-us/um/people/daan/madoko/doc/reference.html  "Madoko reference manual"
